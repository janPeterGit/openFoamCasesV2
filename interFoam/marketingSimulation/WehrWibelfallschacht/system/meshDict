/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                |
| \\      /  F ield         | cfMesh: A library for mesh generation          |
|  \\    /   O peration     |                                                |
|   \\  /    A nd           | Author: Franjo Juretic                         |
|    \\/     M anipulation  | E-mail: franjo.juretic@c-fields.com            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version   2.0;
    format    ascii;
    class     dictionary;
    location  "system";
    object    meshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

surfaceFile "geoForCfMesh/merged.fms";

minCellSize 0.2;

maxCellSize 0.2;

//boundaryCellSize 0.01;


localRefinement
{
	
	"obstacle.*"
	{
       //additionalRefinementLevels 5;
	   //refinementThickness  0.0251; 
	   cellSize 0.101; //6.251E-4;
	}
	
	/*
	"frontAndBack.*"
	{
       //additionalRefinementLevels 5;
	   //refinementThickness  0.01; 
	   cellSize 5.1E-3;
	}
	"bottom.*"
	{
       //additionalRefinementLevels 5;
	   //refinementThickness  0.01; 
	   cellSize 5.1E-3;
	}
	*/
}


/*
boundaryLayers
{
	patchBoundaryLayers
	{
		
		"cylinder.*"
		{
			nLayers					3;
			thicknessRatio 			1.3;
			//maxFirstLayerThickness	0.0025;
			allowDiscontinuity 1;
        }
		
		"bottom.*"
		{
			nLayers					4;
			thicknessRatio 			1.3;
			//maxFirstLayerThickness	0.0025;
			allowDiscontinuity 1;
        }
    }

    optimiseLayer 1;

    optimisationParameters
    {
        nSmoothNormals                   5;
        relThicknessTol 		        0.4;
        featureSizeFactor 		0.8;
        reCalculateNormals 		1; 
        maxNumIterations 		5;
    }
	
}
*/

renameBoundary
{
	defaultType patch;
	newPatchNames
	{
		bottom
		{
			type	wall;
			newName	bottom;
		}
		obstacle
		{
			type	wall;
			newName	obstacle;
		}
		frontAndBack
		{
			type	wall;
			newName	frontAndBack;
		}
		inlet
		{
			type	patch;
			newName	inlet;
		}
		outlet
		{
			type patch;
			newName outlet;
		}
		/*
		outletAir
		{
			type	patch;
			newName	outletAir;
		}
		outletWater
		{
			type	patch;
			newName	outletWater;
		}
		*/
		top
		{
			type	patch;
			newName	top;
		}
		/*
		mount
		{
			type	wall;
			newName	mount;
		}
		*/
	}
}

// ************************************************************************* //
