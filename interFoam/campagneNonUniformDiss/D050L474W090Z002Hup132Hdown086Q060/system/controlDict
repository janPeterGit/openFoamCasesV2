/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     interFoam;

startFrom       latestTime;//latestTime; startTime

startTime       0;//0;

stopAt          endTime;

endTime         90;

deltaT          0.0005;

writeControl    adjustableRunTime;

writeInterval   2;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

/*
maxCo           1;
maxAlphaCo      1;
maxDeltaT       1;
*/


// Time step control
adjustTimeStep  yes;
maxCo           50;
maxAlphaCo      50;
maxDeltaT       0.1;


functions
{
    forcesCylinder
    {
        // Mandatory entries
        type            forces;
        libs            ("libforces.so");
        log              yes;
        patches         (obstacle);
        writeControl    timeStep;
        writeInterval   1;
        // Optional entrie
        // Field names
        p               p;
        U               U;
        rho             rhoInf;
        rhoInf          1000;
        // Reference pressure [Pa]
        pRef            101300;
        // Include porosity effects?
        porosity        no;
        // Store and write volume field representations of forces and moments
        writeFields     no;
        // Centre of rotation for moment calculations
        CofR            (0 0 0);
        // Spatial data binning
        // - extents given by the bounds of the input geometry
        binData
        {
            nBin        20;
            direction   (1 0 0);
            cumulative  yes;
        }
    }

    
    yPlus
    {
        type            yPlus;
        libs            ("libfieldFunctionObjects.so");
        writeControl    writeTime;
        //patches         (cylinder);
    }
					
	courantNo
	{
		type            CourantNo;
		libs            ("libfieldFunctionObjects.so");
		field           phi;
		executeControl  writeTime;
		writeControl    writeTime;
	}
    
    solverInfo
    {
        type            solverInfo;
        libs            ("libutilityFunctionObjects.so");
        fields          (".*"); 
        writeControl    writeTime;
        //writeResidualFields yes;
    }
    

    wallShearStress
    {
        type            wallShearStress;
        libs            ("libfieldFunctionObjects.so");
        writeControl    writeTime;
        patches         (obstacle);
    }

    pressureProbes 
    {
        type probes; 
        libs ("libsampling.so"); 
        probeLocations ((-1 0.395 0)(1 0.395 0));
        //writeControl    writeTime;
        fields (p);
    }

}

// ************************************************************************* //
