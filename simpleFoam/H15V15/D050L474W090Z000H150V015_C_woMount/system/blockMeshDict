/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

xmin -2;
xmax 4;
ymin -0.395;
ymax 0.395;
zmin 0;
zmax 0.12;

vertices
(
    ($xmin   $ymin  $zmin) //  0   bottom inlet left 
    ($xmax   $ymin  $zmin) //  1   bottom outlet left  
    ($xmax   $ymax  $zmin) //  2   bottom outlet right 
    ($xmin   $ymax  $zmin) //  3   bottom inlet right 
    ($xmin   $ymin  $zmax) //  4   top inlet left 
    ($xmax   $ymin  $zmax) //  5   top outlet left
    ($xmax   $ymax  $zmax) //  6   top outlet right
    ($xmin   $ymax  $zmax) //  7   top inlet right
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (1200 158 24) //simpleGrading (1 1 1) // (1300 96 32) // 600 bei 10 m
        
        simpleGrading
			(
				// x-direction expansion ratio
				1/*
                (
					(30 30 0.4)  //Division 1
					(70 70 2.5) //Division 2
				//	//(0.334 0.25 8)    //Division 2
				)*/
				
				// y-direction expansion ratio
                1/*
				(
                    (5.8	13.5	14.44)
                    (88.4	73	1)
                    (5.8	13.5	0.07)
                )*/ // REMINDER: if wall left/right y+ checked?!

				// z-direction expansion ratio
                1/*
                (
                    (46.2 65.6 7.22)
                    (53.8 34.4 1)
                )*/
			)
        
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (2 6 5 1)
        );
    }

    top
    {
        type symmetryPlane;
        faces
        (
            (4 7 6 5)
        );
    }

    bottom
    {
        type wall;
        faces
        (

            (0 3 2 1)
        );
    }

    frontAndBack
    {
        type wall;
        faces
        (
            (0 1 5 4)
            (3 2 6 7)
        );
    }
);

// ************************************************************************* //

