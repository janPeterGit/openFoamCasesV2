clc
clear all
close all

B = 0.79;
gravity = 9.81;
densitiy = 1000;

matlabFolder = pwd;

% read openfoam data
% path = uigetdir('D:\GitHub\openFoamCasesV2\simpleFoam\');
path = 'campagneUniformG0Rotation';
cd(path)
mainFolder = pwd;

folderInfo = dir(pwd);
folders = folderInfo([folderInfo.isdir]);
cases = {folders.name};
% Exclude '.' and '..'
cases = cases(~ismember(cases, {'.', '..'}));

forcesOF = table();

for i = 1:length(cases)
    dirInfo = dir(cases{i});
    if length(dirInfo) <= 2
    else
        cd([cases{i},'\postProcessing\forcesCylinder'])
        %     i
        forcesOF.D(i) = str2double(extractBetween(cases{i},'D','L'))/1000;
        forcesOF.L(i) = str2double(extractBetween(cases{i},'L','W'))/1000;
        forcesOF.gamma(i) = str2double(extractBetween(cases{i},'W','G'));
        forcesOF.G(i) = str2double(extractBetween(cases{i},'G','H'))/1000;
        forcesOF.h(i) = str2double(extractBetween(cases{i},'H','V'))/1000;
        forcesOF.v(i) = str2double(extractBetween(cases{i},'V','_'))/100;
        forcesOF.Q(i) = forcesOF.v(i) * forcesOF.h(i) * B /1000;
        %     forcesOF.Position(i) = str2double(extractBetween(cases{i},'_','_'));

        timeStepInfo = dir(pwd);
        timeSteps = timeStepInfo([timeStepInfo.isdir]);
        timeStepsNames = {timeSteps.name};
        % Exclude '.' and '..' folders
        timeStepsNames = timeStepsNames(~ismember(timeStepsNames, {'.', '..'}));

        cd(timeStepsNames{1})

        forces = importForcesDat('force.dat');

        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        font = 'Arial';
        fontSize = 16;
        f = figure('DefaultTextFontName', font, ...
            'DefaultAxesFontName', font,...
            'DefaultAxesFontSize',fontSize, ...
            'DefaultTextFontSize',fontSize);
        f.Name = 'Forces Specific Momentum';
        f.Color = [1 1 1];
        f.Units = 'centimeters';
        f.InnerPosition = [5 5 30 30];
        f.WindowState = 'normal'; %fullscreen, minimize, normal, maximize

        abweichungGanglinie = 1.005; % 0.5%
        timeStepWindow = 100;
        hold on
        %     plot(forces(end-timeStepWindow:end,1),forces(end-timeStepWindow:end,2))
        %     plot([forces(end-timeStepWindow,1) forces(end,1)], ...
        %         [forces(end,2)*abweichungGanglinie forces(end,2)*abweichungGanglinie],'r-')
        %     plot([forces(end-timeStepWindow,1) forces(end,1)], ...
        %         [forces(end,2)/abweichungGanglinie forces(end,2)/abweichungGanglinie],'r-')

        plot(forces(1:end,1),forces(1:end,2))
        plot([forces(1,1) forces(end,1)], ...
            [forces(end,2)*abweichungGanglinie forces(end,2)*abweichungGanglinie],'r-')
        plot([forces(1,1) forces(end,1)], ...
            [forces(end,2)/abweichungGanglinie forces(end,2)/abweichungGanglinie],'r-')

        dim = [0.6 0.6 0.3 0.3];
        str = {['pressure=',num2str(forces(end,5)/forces(end,2)*100),...
            '%, friction=',num2str(forces(end,8)/forces(end,2)*100),'%']};
        annotation('textbox',dim,'String',str,'FitBoxToText','on');

        ylim([forces(end,2)/1.1 forces(end,2)*1.1])

        grid on
        box off

        ylabel('F_{x,total}')
        xlabel('iteration')
        title(cases{i})

        figureName = ['..\..\..\..\checkForces_',cases{i},'.png'];
        exportgraphics(f,figureName,'Resolution',200)


        pause(1)
        %         close all
        cd(mainFolder)

        forcesOF.xTotal(i) = forces(end,2);
        forcesOF.yTotal(i) = forces(end,3);
        forcesOF.zTotal(i) = forces(end,4);

        forcesOF.xPressure(i) = forces(end,5);
        forcesOF.yPressure(i) = forces(end,6);
        forcesOF.zPressure(i) = forces(end,7);

        forcesOF.xViscous(i) = forces(end,8);
        forcesOF.yViscous(i) = forces(end,9);
        forcesOF.zViscous(i) = forces(end,10);

        
    end
end

close all

forcesOF.xPressurePortion = forcesOF.xPressure ./ forcesOF.xTotal .*100;
forcesOF.xViscousPortion = forcesOF.xViscous ./ forcesOF.xTotal .*100;

%%
font = 'Arial';
        fontSize = 8;
        f = figure('DefaultTextFontName', font, ...
            'DefaultAxesFontName', font,...
            'DefaultAxesFontSize',fontSize, ...
            'DefaultTextFontSize',fontSize);
        f.Name = 'Forces Specific Momentum';
        f.Color = [1 1 1];
        f.Units = 'centimeters';
        f.InnerPosition = [5 5 12 10];
        f.WindowState = 'normal'; %fullscreen, minimize, normal, maximize

color1 = [0 0.4470 0.7410];
color2 = [0.8500 0.3250 0.0980];

hold on
yyaxis left; % Use the left y-axis for the first set of data points
plotPressure = plot(forcesOF.gamma,forcesOF.xPressurePortion, 'b-o'); % Plot the first set of data points with blue circles
plotPressure.Color = color1;
plotPressure.DisplayName = "Druckkraft";

% Customize the left y-axis
ylabel('Druckkraftanteil in \%',Interpreter='latex');
set(gca, 'YColor', color1); % Set the y-axis color to match the plot

yyaxis right; % Use the right y-axis for the second set of data points
plotViscous = plot(forcesOF.gamma,forcesOF.xViscousPortion, 'r-s'); % Plot the second set of data points with red stars
plotViscous.Color = color2;
plotViscous.DisplayName = "Reibungskraft";

% Customize the right y-axis
ylabel('Reibungskraftanteil in \%',Interpreter='latex');
set(gca, 'YColor', color2); % Set the y-axis color to match the plot

xlabel('$\gamma$ in $^\circ$',Interpreter='latex');
grid on
box off

set(gca,'TickLabelInterpreter','latex')
legend(Interpreter="latex",Location="east")

%%
font = 'Arial';
        fontSize = 8;
        f = figure('DefaultTextFontName', font, ...
            'DefaultAxesFontName', font,...
            'DefaultAxesFontSize',fontSize, ...
            'DefaultTextFontSize',fontSize);
        f.Name = 'Forces Specific Momentum';
        f.Color = [1 1 1];
        f.Units = 'centimeters';
        f.InnerPosition = [5 5 12 10];
        f.WindowState = 'normal'; %fullscreen, minimize, normal, maximize

color1 = [0 0.4470 0.7410];
color2 = [0.8500 0.3250 0.0980];

hold on
plotPressure = plot(forcesOF.gamma,forcesOF.xPressurePortion, 'b-o'); % Plot the first set of data points with blue circles
plotPressure.Color = color3;

% Customize the right y-axis
ylabel('F_{gesamt} in N',Interpreter='latex');
xlabel('$\gamma$ in $^\circ$',Interpreter='latex');
grid on
box off

set(gca,'TickLabelInterpreter','latex')
legend(Interpreter="latex",Location="east")

%% functions

function forceArray = importForcesDat(filenameOF)
% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 11);

% Specify range and delimiter
opts.DataLines = [5, Inf];
opts.Delimiter = ["\t", " ", "(", ")"];

% Specify column names and types
opts.VariableNames = ["Time", "total_x", "total_y", "total_z", "pressure_x", "pressure_y", "pressure_z", "viscous_x", "viscous_y", "viscous_z"];
opts.SelectedVariableNames = ["Time", "total_x", "total_y", "total_z", "pressure_x", "pressure_y", "pressure_z", "viscous_x", "viscous_y", "viscous_z"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";
opts.ConsecutiveDelimitersRule = "join";

% Import the data
forceTab = readtable(filenameOF, opts);

% Convert to output type
forceArray = table2array(forceTab);

% Clear temporary variables
clear opts

end